{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appNamePrefix": {
            "maxLength": 14,
            "type": "String",
            "metadata": {
                "description": "Common identifier for all related resources."
            }
        },
        "customDomainName": {
            "type": "string",
            "defaultValue": "mysite.customdomain.com",
            "metadata": {
              "description": "Custom Domain Name"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "The location of the storage."
            }
        },
        "indexDocumentPath": {
            "type": "string",
            "defaultValue": "index.html",
            "metadata": {
              "description": "The path to the web index document."
            }
          },
          "indexDocumentContents": {
            "type": "string",
            "defaultValue": "<h1>Example static website</h1>",
            "metadata": {
              "description": "The contents of the web index document."
            }
          },
          "errorDocument404Path": {
            "type": "string",
            "defaultValue": "error.html",
            "metadata": {
              "description": "The path to the web error document."
            }
          },
          "errorDocument404Contents": {
            "type": "string",
            "defaultValue": "<h1>Example 404 error page</h1>",
            "metadata": {
              "description": "The contents of the web error document."
            }
          }
    },
    "variables": {
        "cdnProfileName": "[format('cdnpro-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
        "cdnEndpointName": "[format('cdnend-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
        "originHostHeader": "[concat(variables('storageAccountName'), string('.z6.web.core.windows.net'))]",
        "originName": "[concat(variables('storageAccountName'), string('-z6-web-core-windows-net'))]",
        "customDomain": "[parameters('customDomainName')]",
        "customDomaindash": "[replace(parameters('customDomainName'),'.','-')]",
        "storageAccountName": "[format('sto{0}{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "DeploymentScript",
            "location": "[parameters('location')]"
            },
            {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
            "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab'))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript')).principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
            },
            {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "deploymentScript",
            "location": "[parameters('location')]",
            "kind": "AzurePowerShell",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript'))]": {}
                }
            },
            "properties": {
                "azPowerShellVersion": "3.0",
                "scriptContent": "$ErrorActionPreference = 'Stop'\n$storageAccount = Get-AzStorageAccount -ResourceGroupName $env:ResourceGroupName -AccountName $env:StorageAccountName\n\n# Enable the static website feature on the storage account.\n$ctx = $storageAccount.Context\nEnable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:IndexDocumentPath -ErrorDocument404Path $env:ErrorDocument404Path\n\n# Add the two HTML pages.\n$tempIndexFile = New-TemporaryFile\nSet-Content $tempIndexFile $env:IndexDocumentContents -Force\nSet-AzStorageBlobContent -Context $ctx -Container '$web' -File $tempIndexFile -Blob $env:IndexDocumentPath -Properties @{'ContentType' = 'text/html'} -Force\n\n$tempErrorDocument404File = New-TemporaryFile\nSet-Content $tempErrorDocument404File $env:ErrorDocument404Contents -Force\nSet-AzStorageBlobContent -Context $ctx -Container '$web' -File $tempErrorDocument404File -Blob $env:ErrorDocument404Path -Properties @{'ContentType' = 'text/html'} -Force\n",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "PT4H",
                "environmentVariables": [
                {
                    "name": "ResourceGroupName",
                    "value": "[resourceGroup().name]"
                },
                {
                    "name": "StorageAccountName",
                    "value": "[variables('storageAccountName')]"
                },
                {
                    "name": "IndexDocumentPath",
                    "value": "[parameters('indexDocumentPath')]"
                },
                {
                    "name": "IndexDocumentContents",
                    "value": "[parameters('indexDocumentContents')]"
                },
                {
                    "name": "ErrorDocument404Path",
                    "value": "[parameters('errorDocument404Path')]"
                },
                {
                    "name": "ErrorDocument404Contents",
                    "value": "[parameters('errorDocument404Contents')]"
                }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript')]",
                "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'DeploymentScript'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Cdn/profiles",
            "apiVersion": "2021-06-01",
            "name": "[variables('cdnProfileName')]",
            "location": "Global",
            "sku": {
                "name": "Standard_Microsoft"
            },
            "kind": "cdn",
            "properties": {}
        },
        {
            "type": "Microsoft.Cdn/profiles/endpoints",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('cdnProfileName'), '/', variables('cdnProfileName'))]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', variables('cdnProfileName'))]"
            ],
            "properties": {
                "originHostHeader": "[variables('originHostHeader')]",
                "contentTypesToCompress": [
                    "application/eot",
                    "application/font",
                    "application/font-sfnt",
                    "application/javascript",
                    "application/json",
                    "application/opentype",
                    "application/otf",
                    "application/pkcs7-mime",
                    "application/truetype",
                    "application/ttf",
                    "application/vnd.ms-fontobject",
                    "application/xhtml+xml",
                    "application/xml",
                    "application/xml+rss",
                    "application/x-font-opentype",
                    "application/x-font-truetype",
                    "application/x-font-ttf",
                    "application/x-httpd-cgi",
                    "application/x-javascript",
                    "application/x-mpegurl",
                    "application/x-opentype",
                    "application/x-otf",
                    "application/x-perl",
                    "application/x-ttf",
                    "font/eot",
                    "font/ttf",
                    "font/otf",
                    "font/opentype",
                    "image/svg+xml",
                    "text/css",
                    "text/csv",
                    "text/html",
                    "text/javascript",
                    "text/js",
                    "text/plain",
                    "text/richtext",
                    "text/tab-separated-values",
                    "text/xml",
                    "text/x-script",
                    "text/x-component",
                    "text/x-java-source"
                ],
                "isCompressionEnabled": true,
                "isHttpAllowed": true,
                "isHttpsAllowed": true,
                "queryStringCachingBehavior": "IgnoreQueryString",
                "origins": [
                    {
                        "name": "[variables('originName')]",
                        "properties": {
                            "hostName": "[variables('originHostHeader')]",
                            "httpPort": 80,
                            "httpsPort": 443,
                            "originHostHeader": "[variables('originHostHeader')]",
                            "priority": 1,
                            "weight": 1000,
                            "enabled": true
                        }
                    }
                ],
                "originGroups": [],
                "geoFilters": []
            }
        }
    ]
}
